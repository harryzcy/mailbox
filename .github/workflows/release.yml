name: Releases

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  release:
    name: Release on GitHub
    if: github.repository_owner == 'harryzcy'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.release_drafter.outputs.upload_url }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Release drafter
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 # v6.1.0
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.release_drafter.outputs.id }},
              tag_name: '${{ github.ref_name }}',
              name: 'Release ${{ github.ref_name }}',
              draft: context.eventName != 'push'
            });

  release-artifacts:
    name: Release Artifacts
    if: github.repository_owner == 'harryzcy'
    needs: release
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      contents: write
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: 1.25
          check-latest: true

      - name: Build AWS Lambda binaries
        run: |
          make build-lambda
          tar -C .. -czf mailbox-linux-${{ matrix.arch }}.tar.gz mailbox/bin

      - name: Upload binaries to Release
        uses: shogo82148/actions-upload-release-asset@e6cd4579c50a5d0eb50ca05d0d597daafca8cebb # v1.9.0
        with:
          upload_url: ${{ needs.release.outputs.upload_url}}
          asset_path: mailbox-linux-${{ matrix.arch }}.tar.gz
